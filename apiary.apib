FORMAT: 1A
HOST: http://localhost/user_disregard/v1/

# babe-user-disregard-ms

The User Disregard Service objective is to store user's disregard list, be it by category or by source publisher.

The service will share storage on `OrientDB` with User Microservice.

There is chance this service will need access to `Redis` and also will share User Microservice `Redis Cluster`.

# Group User Disregard

## Disregard Publisher [/publisher/{uid}]

+ Parameters
    + uid: 123 (number, required) - User ID.

### Add Publisher Id on Disregard List [PUT]

Add a `publisherId` on specific user's disregard list.

Create relationship (if it hasn't) from a `Publisher` node containing `publisherId` field.

If `uid` id not found then return **HTTP 404**.

If `publisherId` is not found in DB then create a new `Publisher` node, otherwise use the existing node.

+ Request (application/json)
    + Attributes
        + publisherId: 9 (number, required) - Publisher ID to be disregarded.

+ Response 204

+ Response 400 (application/json)
    Return when parameters requirement not met correctly
    
    + Attributes (DefaultError400)
        
+ Response 404 (application/json)
    Return when User ID is not found.
    
    + Attributes (DefaultError404)

+ Response 503 (application/json)
    Return when server has internal error and can't continue fulfilling the request

    + Attributes (DefaultError503)

### Get User's Publisher Disregard List [GET]

Returns all `publisherId` which are disregarded by specified `uid` as an `array of int`.

If `uid` id not found then return **HTTP 404**.

+ Response (application/json)
    + Attributes
        + pubIds: 1, 3, 9, 11, 35 (array[number]) - Array of all `publisherId` which are disregarded.
        
+ Response 404 (application/json)
    Return when User ID is not found.
    
    + Attributes (DefaultError404)

+ Response 503 (application/json)
    Return when server has internal error and can't continue fulfilling the request

    + Attributes (DefaultError503)

## Disregard Category [/category/{uid}]

+ Parameters
    + uid: 123 (number, required) - User ID.

### Add Category Id on Disregard List [PUT]

Add a `categoryId` on specific user's disregard list.

Create relationship (if it hasn't) from a `Category` node containing `categoryId` field.

If `uid` id not found then return **HTTP 404**.

If `categoryId` is not found in DB then create a new `Category` node, otherwise use the existing node.

+ Request (application/json)
    + Attributes
        + categoryId: 17 (number, required) - Category ID to be disregarded.

+ Response 204

+ Response 400 (application/json)
    Return when parameters requirement not met correctly
    
    + Attributes (DefaultError400)
        
+ Response 404 (application/json)
    Return when User ID is not found.
    
    + Attributes (DefaultError404)

+ Response 503 (application/json)
    Return when server has internal error and can't continue fulfilling the request

    + Attributes (DefaultError503)

### Get User's Category Disregard List [GET]

Returns all `categoryId` which are disregarded by specified `uid` as an `array of int`.

If `uid` id not found then return **HTTP 404**.

+ Response (application/json)
    + Attributes
        + pubIds: 4, 7, 9, 30, 111 (array[number]) - Array of all `categoryId` which are disregarded.
        
+ Response 404 (application/json)
    Return when User ID is not found.
    
    + Attributes (DefaultError404)

+ Response 503 (application/json)
    Return when server has internal error and can't continue fulfilling the request

    + Attributes (DefaultError503)

# Data Structures

## Error (object)
+ errCode (number) - Error Code
+ errMsg (string) - Error Message

## DefaultError400 (Error)
+ errCode: `-1`
+ errMsg: Invalid Request

## DefaultError401 (Error)
+ errCode: `-2`
+ errMsg: Authorization needed to access resource

## DefaultError404 (Error)
+ errCode: `-5`
+ errMsg: Resource not found

## DefaultError413 (Error)
+ errCode: `-14`
+ errMsg: Request Entity Too Large

## DefaultError503 (Error)
+ errCode: `-10`
+ errMsg: Backend service is down